{
    "name": "mern-snippets",
    "displayName": "MERN Snippets",
    "description": "MongoDB, ExpressJS, ReactJS & NodeJS Snippets ðŸš€ MERN Snippets include Redux, EJS, HBS ,Auto Import",
    "version": "0.0.1",
    "publisher": "Mohamed-khaled",
    "repository": {
        "type": "git",
        "url": "https://github.com/moh2medkhaled/mern-snippets"
    },
    "icon": "logo.png",
    "engines": {
        "vscode": "^1.60.0"
    },
    "keywords": [
        "javascript",
        "typescript",
        "react",
        "Redux",
        "EJS",
        "hbs",
        "imports",
        "exports",
        "require"
    ],
    "categories": [
        "Snippets",
        "Other"
    ],
    "activationEvents": [
        "onLanguage:javascript",
        "onLanguage:javascriptreact",
        "onLanguage:typescript",
        "onLanguage:typescriptreact"
    ],
    "main": "./out/src/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.scanNodeModules",
                "title": "Scan node_modules for imports"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "Auto Import configuration",
            "properties": {
                "autoimport.filesToScan": {
                    "type": "string",
                    "default": "**/*.{js,jsx,ts,tsx}",
                    "description": "Glob for files to watch and scan, e.g ./src/** ./src/app/**/*.ts. Defaults to **/*.{ts,tsx}"
                },
                "autoimport.absolute": {
                    "type": "boolean",
                    "default": false,
                    "description": "True if the imports should be absolute to the workspace root"
                },
                "autoimport.sourceRoot": {
                    "type": "string",
                    "default": "./",
                    "description": "Change this if your absolute urls are not absolute from workspace root e.g ./src"
                },
                "autoimport.showNotifications": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specifies whether to show notifications from Auto Import"
                },
                "autoimport.doubleQuotes": {
                    "type": "boolean",
                    "default": false,
                    "description": "Specifies whether to use double quotes"
                },
                "autoimport.semicolon": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies whether to use a semicolon at the end of the line"
                },
                "autoimport.spaceBetweenBraces": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies whether to use spaces between first and last brace"
                },
                "autoimport.autoComplete": {
                    "type": "boolean",
                    "default": true,
                    "description": "Adds found items to intellisense and automatically imports then"
                },
                "autoimport.higherOrderComponents": {
                    "type": "string",
                    "default": "connect|withRouter",
                    "description": "This allows the importer to find your components name bypass the higher order components that you wrap it in. Each higher order component must be deliminated by pipe |. example: connect|withRouter"
                }
            }
        },
        "snippets": [
            {
                "language": "javascriptreact",
                "path": "./snippets/react/react.json"
            },
            {
                "language": "javascript",
                "path": "jsconfig.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/react/react.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/function.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/jest.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/application.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/examples.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/handlers.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/middleware.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/module.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/request.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/response.json"
            },
            {
                "language": "javascript",
                "path": "./snippets/express/router.json"
            },
            {
                "language": "html",
                "path": "./snippets/ejs/ejs.json"
            },
            {
                "language": "html",
                "path": "./ejs/ejs.json"
            },
            {
                "language": "handlebars",
                "path": "./hbs/hbs.json"
            },
            {
                "language": "hbs",
                "path": "./hbs/hbs.json"
            },
            {
                "language": "handlebars",
                "path": "./hbs/hbs.json"
            },
            {
                "language": "hbs",
                "path": "./hbs/hbs.json"
            },
            {
                "language": "javascript",
                "path": "./mongo/mongoose.json"
            },
            {
                "language": "javascript",
                "path": "./mongo/mongo.json"
            },
            {
                "language": "typescript",
                "path": "./mongo/mongo.json"
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "tsc -p ./",
        "compile": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install"
    },
    "dependencies": {
        "lodash": "^4.17.21",
        "node-json-db": "^1.4.1"
    },
    "devDependencies": {
        "@types/mocha": "^9.0.0",
        "@types/node": "^16.10.1",
        "mocha": "^9.1.2",
        "typescript": "^4.4.3",
        "vscode": "^1.1.37"
    }
}